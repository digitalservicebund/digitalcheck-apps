name: Build and Deploy

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      directory:
        required: true
        type: string
      deploy_key:
        required: true
        type: string

env:
  IMAGE_NAME: digitalservicebund/${{ inputs.name }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # This is used to complete the identity challenge with sigstore/fulcio.
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build image from Dockerfile
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} . -f ${{ inputs.directory }}/Dockerfile --build-arg COMMIT_SHA=${{ github.sha }}

      - name: Generate cosign vulnerability scan record
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # v0.19.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: "cosign-vuln"
          output: "${{ inputs.name }}-vulnerabilities.json"

      - name: Upload cosign vulnerability scan record
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.name }}-vulnerabilities.json"
          path: "${{ inputs.name }}-vulnerabilities.json"
          if-no-files-found: error

      - name: Install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0

      - name: Login to container registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ghcr.io/${{ env.IMAGE_NAME }}
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push --all-tags ghcr.io/${{ env.IMAGE_NAME }}

      - name: Create SBOM
        uses: digitalservicebund/create-sbom@9535ef832c2895b44b7266f84e16ad7598d1ead9 # v1.2.1
        with:
          image_name: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          artifact_name: SBOM-${{ inputs.name }}

      - name: Sign the published Docker image
        run: cosign sign --yes ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Attest the vulnerability scan
        run: cosign attest --yes --replace --predicate ${{ inputs.name }}-vulnerabilities.json --type vuln ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: [build-and-push-image]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      packages: read
    environment: production # FIXME: Create environment.
    steps:
      - name: Deploy latest container image
        uses: digitalservicebund/argocd-deploy@4fac1bb67c92ed168f6d9b22f8779ce241a9e412 # v1.0.0
        with:
          environment: production
          version: ${{ github.sha }}
          deploying_repo: ${{ inputs.name }}
          infra_repo: ${{ github.event.repository.name }}-infra
          deploy_key: ${{ inputs.deploy_key }}
          app: ${{ inputs.name }}-production
          argocd_pipeline_password: ${{ secrets.ARGOCD_PIPELINE_PASSWORD }}
          argocd_server: ${{ secrets.ARGOCD_SERVER }}

      - name: Report Deployment
        uses: digitalservicebund/github-actions/track-deployment@34a48d29a9c4cc2fd6710b8eb37e13618a08fa88 # v1.0.0
        with:
          project: ${{ github.event.repository.name }}
          environment: production
          metrics_deployment_webhook_url: ${{ secrets.METRICS_DEPLOYMENT_WEBHOOK_URL }}
          metrics_webhook_token: ${{ secrets.METRICS_WEBHOOK_TOKEN }}
